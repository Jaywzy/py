<!-- doc/src/sgml/mysql_fdw.sgml -->

<sect1 id="mysql_fdw" xreflabel="mysql_fdw">
    <title>mysql_fdw</title>

    <indexterm zone="mysql_fdw">
        <primary>mysql_fdw</primary>
    </indexterm>

    <para>
        This LightDB extension implements a Foreign Data Wrapper (FDW) for
        <ulink url="https://www.mysql.com/">MySQL</ulink>.
    </para>

    <sect2>
        <title>Installation</title>

        <para>
            To compile the <ulink url="https://www.mysql.com/">MySQL</ulink> foreign data wrapper,
            MySQL's C client library is needed, and the default version is 8.0.26. This library can be
            downloaded from the official <ulink url="https://dev.mysql.com/downloads/mysql/">MySQL website</ulink>.
        </para>

        <para>
            The <literal>mysql_config</literal> must also be in the library path, it resides in the MySQL lib directory.
        </para>

        <programlisting>
            $ export LD_LIBRARY_PATH=/usr/lib64/mysql/:$LD_LIBRARY_PATH
        </programlisting>
    </sect2>

    <sect2>
        <title>Enhancements</title>

        <para>
            The following enhancements are added to the latest version of mysql_fdw:
        </para>

        <sect3>
            <title>Write-able FDW</title>

            <para>
                The previous version was only read-only, the latest version provides the write capability.
                The user can now issue an insert, update, and delete statements for the foreign tables using
                the mysql_fdw. It uses the PG type casting mechanism to provide opposite type casting
                between MySQL and PG data types.
            </para>
        </sect3>

        <sect3>
            <title>Connection Pooling</title>

            <para>
                The latest version comes with a connection pooler that utilises the same MySQL database
                connection for all the queries in the same session. The previous version would open a new MySQL
                database connection for every query. This is a performance enhancement.
            </para>
        </sect3>

        <sect3>
            <title>WHERE clause push-down</title>

            <para>
                The latest version will push-down the foreign table where clause to the foreign server.
                The where condition on the foreign table will be executed on the foreign server hence
                there will be fewer rows to bring across to LightDB. This is a performance feature.
            </para>
        </sect3>

        <sect3>
            <title>Column push-down</title>

            <para>
                The previous version was fetching all the columns from the target foreign table.
                The latest version does the column push-down and only brings back the columns that
                are part of the select target list. This is a performance feature.
            </para>
        </sect3>

        <sect3>
            <title>Prepared Statement</title>

            <para>
                (Refactoring for <literal>select</literal> queries to use prepared statement)
            </para>

            <para>
                The <literal>select</literal> queries are now using prepared statements instead of simple query protocol.
            </para>
        </sect3>

        <sect3>
            <title>JOIN push-down</title>

            <para>
                mysql_fdw now also supports join push-down. The joins between two foreign tables from the same
                remote MySQL server are pushed to a remote server, instead of fetching all the rows for both
                the tables and performing a join locally, thereby enhancing the performance. Currently, joins
                involving only relational and arithmetic operators in join-clauses are pushed down to avoid
                any potential join failure. Also, only the INNER and LEFT/RIGHT OUTER joins are supported,
                and not the FULL OUTER, SEMI, and ANTI join. This is a performance feature.
            </para>
        </sect3>
    </sect2>

    <sect2>
        <title>Usage</title>

        <para>
            The following parameters can be set on a MySQL foreign server object:
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    <literal>host</literal>: Address or hostname of the MySQL server. Defaults to <literal>127.0.0.1</literal>
                </para>
            </listitem>

            <listitem>
                <para>
                    <literal>port</literal>: Port number of the MySQL server. Defaults to <literal>3306</literal>
                </para>
            </listitem>

            <listitem>
                <para>
                    <literal>secure_auth</literal>: Enable or disable secure authentication. Default is <literal>true</literal>
                </para>
            </listitem>

            <listitem>
                <para>
                    <literal>init_command</literal>: SQL statement to execute when connecting to the MySQL server.
                </para>
            </listitem>

            <listitem>
                <para>
                    <literal>use_remote_estimate</literal>: Controls whether mysql_fdw issues remote EXPLAIN commands
                    to obtain cost estimates. Default is <literal>false</literal>
                </para>
            </listitem>

            <listitem>
                <para>
                    <literal>reconnect</literal>: Enable or disable automatic reconnection to the MySQL server if
                    the existing connection is found to have been lost. Default is <literal>false</literal>.
                </para>
            </listitem>

            <listitem>
                <para>
                    <literal>ssl_key</literal>: The path name of the client private key file.
                </para>
            </listitem>

            <listitem>
                <para>
                    <literal>ssl_cert</literal>: The path name of the client public key certificate file.
                </para>
            </listitem>

            <listitem>
                <para>
                    <literal>ssl_ca</literal>: The path name of the Certificate Authority (CA) certificate file.
                    This option, if used, must specify the same certificate used by the server.
                </para>
            </listitem>

            <listitem>
                <para>
                    <literal>ssl_capath</literal>: The path name of the directory that contains trusted SSL CA certificate files.
                </para>
            </listitem>

            <listitem>
                <para>
                    <literal>ssl_cipher</literal>: The list of permissible ciphers for SSL encryption.
                </para>
            </listitem>

            <listitem>
                <para>
                    <literal>fetch_size</literal>: This option specifies the number of rows mysql_fdw should get
                    in each fetch operation. It can be specified for a foreign table or a foreign server.
                    The option specified on a table overrides an option specified for the server.
                    The default is <literal>100</literal>.
                </para>
            </listitem>
        </itemizedlist>

        <para>
            The following parameters can be set on a MySQL foreign table object:
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    <literal>dbname</literal>: Name of the MySQL database to query. This is a mandatory option.
                </para>
            </listitem>

            <listitem>
                <para>
                    <literal>table_name</literal>: Name of the MySQL table, default is the same as foreign table.
                </para>
            </listitem>

            <listitem>
                <para>
                    <literal>max_blob_size</literal>: Max blob size to read without truncation.
                </para>
            </listitem>

            <listitem>
                <para>
                    <literal>fetch_size</literal>: Same as <literal>fetch_size</literal> parameter for foreign server.
                </para>
            </listitem>
        </itemizedlist>

        <para>
            The following parameters need to supplied while creating user mapping.
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    <literal>username</literal>: Username to use when connecting to MySQL.
                </para>
            </listitem>

            <listitem>
                <para>
                    <literal>password</literal>: Password to authenticate to the MySQL server with.
                </para>
            </listitem>
        </itemizedlist>
    </sect2>

    <sect2>
        <title>Examples</title>

        <programlisting>
            -- load extension first time after install
            CREATE EXTENSION mysql_fdw;

            -- create server object
            CREATE SERVER mysql_server
            	FOREIGN DATA WRAPPER mysql_fdw
            	OPTIONS (host '127.0.0.1', port '3306');

            -- create user mapping
            CREATE USER MAPPING FOR LightDB
            	SERVER mysql_server
            	OPTIONS (username 'foo', password 'bar');

            -- create foreign table
            CREATE FOREIGN TABLE warehouse
            	(
            		warehouse_id int,
            		warehouse_name text,
            		warehouse_created timestamp
            	)
            	SERVER mysql_server
            	OPTIONS (dbname 'db', table_name 'warehouse');

            -- insert new rows in table
            INSERT INTO warehouse values (1, 'UPS', current_date);
            INSERT INTO warehouse values (2, 'TV', current_date);
            INSERT INTO warehouse values (3, 'Table', current_date);

            -- select from table
            SELECT * FROM warehouse ORDER BY 1;

            warehouse_id | warehouse_name | warehouse_created
            -------------+----------------+-------------------
                       1 | UPS            | 10-JUL-20 00:00:00
                       2 | TV             | 10-JUL-20 00:00:00
                       3 | Table          | 10-JUL-20 00:00:00

            -- delete row from table
            DELETE FROM warehouse where warehouse_id = 3;

            -- update a row of table
            UPDATE warehouse set warehouse_name = 'UPS_NEW' where warehouse_id = 1;

            -- explain a table with verbose option
            EXPLAIN VERBOSE SELECT warehouse_id, warehouse_name FROM warehouse WHERE warehouse_name LIKE 'TV' limit 1;

                                               QUERY PLAN
            --------------------------------------------------------------------------------------------------------------------
            Limit  (cost=10.00..11.00 rows=1 width=36)
            	Output: warehouse_id, warehouse_name
            	->  Foreign Scan on public.warehouse  (cost=10.00..1010.00 rows=1000 width=36)
            		Output: warehouse_id, warehouse_name
            		Local server startup cost: 10
            		Remote query: SELECT `warehouse_id`, `warehouse_name` FROM `db`.`warehouse` WHERE ((`warehouse_name` LIKE BINARY 'TV'))
        </programlisting>
    </sect2>
</sect1>