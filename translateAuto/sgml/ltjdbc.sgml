<!-- doc/src/sgml/ltjdbc.sgml -->

<appendix id="ltjdbc">
	<title>LightDB JDBC</title>

	<para>
	The LightDB JDBC Driver allows Java programs to connect to a LightDB using standard, database independent Java code.  
	</para>

		<para>In addition to the standard connection parameters the driver supports 
		      a number of additional properties which can be used to specify
		      additional driver behaviour specific to LightDB.
		</para>

		<itemizedlist>
            <listitem>
                <para>
                <replaceable>lightdbSyntaxCompatibleType (String)</replaceable>
                    specifies LightDB compatiable type, valid values are oracle/mysql/off,default value is off. It can compatiable with Oracle Database,MySQL DataBase.
                    For example:
                    <synopsis>
                      jdbc:postgresql://localhost:5432/postgres?lightdbSyntaxCompatibleType=oracle
                      <lineannotation>
                         jdbc can compatiable with Oracle Database 
                      </lineannotation>
                    </synopsis>
                </para>
            </listitem>

            <listitem>
               <para>
               <replaceable>currentSchema (String)</replaceable>
                   specifies the schema (or several schema separated by commas) to be set in the search-path.
                   This schema will be used to resolve unqualified object names used in statements over this connection.
                   For example:
                   <synopsis>
                      jdbc:postgresql://localhost:5432/postgres?currentSchema=\"$user\", oracle
                      <lineannotation>
                          jdbc will automatically supplement public to search_path. Actual search_path is "$user", oracle, public, lt_catalog
                      </lineannotation>
                    </synopsis>
               </para>
            </listitem>

            <listitem>
                <para>
                <replaceable>options (String)</replaceable>
                    specifies the guc parameter in options. The format is as follows: options=- c guc parameter name=parameter value, 
                    where the value after options needs encode.
                    For example:
                    <synopsis>
                      jdbc:postgresql://localhost:5432/postgres?options=-c%20search_path=\"$user\",public,oracle,lt_catalog%20-c%20statement_timeout=90000
                      <lineannotation>
                          search_path is part of the guc parameter, so you can also set search_ path
                      </lineannotation>
                    </synopsis>
                </para>
            </listitem>
		</itemizedlist>
</appendix>

