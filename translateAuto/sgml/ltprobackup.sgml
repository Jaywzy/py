<!-- doc/src/sgml/ltprobackup.sgml -->

<sect1 id="ltprobackup" xreflabel="lt_probackup">
    <title>lt_probackup</title>

    <indexterm zone="ltprobackup">
        <primary>lt_probackup</primary>
    </indexterm>

    <para>
        <literal>lt_probackup</literal> is a utility to manage backup and recovery of LightDB database clusters.
        It is designed to perform periodic backups of the LightDB instance that enable you to
        restore the server in case of a failure.
    </para>

    <para>
        As compared to other backup solutions, <literal>lt_probackup</literal> offers the following benefits
        that can help you implement different backup strategies and deal with large amounts of data:
    </para>

    <itemizedlist>
        <listitem>
            <para>
                Incremental backup: page-level incremental backup allows you to save disk space, speed up
                backup and restore. With three different incremental modes, you can plan the backup strategy
                in accordance with your data flow.
            </para>
        </listitem>

        <listitem>
            <para>
                Incremental restore: page-level incremental restore allows you dramatically speed up restore by
                reusing valid unchanged pages in destination directory.
            </para>
        </listitem>

        <listitem>
            <para>
                Merge: using this feature allows you to implement "incrementally updated backups" strategy,
                eliminating the need to do periodical full backups.
            </para>
        </listitem>

        <listitem>
            <para>
                Validation: automatic data consistency checks and on-demand backup validation without actual data recovery
            </para>
        </listitem>

        <listitem>
            <para>
                Verification: on-demand verification of LightDB instance with the <literal>checkdb</literal> command.
            </para>
        </listitem>

        <listitem>
            <para>
                Retention: managing WAL archive and backups in accordance with retention policy. You can
                configure retention policy based on recovery time or the number of backups to keep, as well as
                specify time to live (TTL) for a particular backup. Expired backups can be merged or deleted.
            </para>
        </listitem>

        <listitem>
            <para>
                Parallelization: running backup, restore, merge, delete, verificaton and validation processes on
                multiple parallel threads
            </para>
        </listitem>

        <listitem>
            <para>
                Compression: storing backup data in a compressed state to save disk space
            </para>
        </listitem>

        <listitem>
            <para>
                Deduplication: saving disk space by not copying unchanged non-data files, such
                as <literal>_vm</literal> or <literal>_fsm</literal>
            </para>
        </listitem>

        <listitem>
            <para>
                Remote operations: backing up LightDB instance located on a remote system or restoring a backup remotely
            </para>
        </listitem>

        <listitem>
            <para>
                Backup from standby: avoid extra load on master by taking backups from a standby server
            </para>
        </listitem>

        <listitem>
            <para>
                External directories: backing up files and directories located outside of the LightDB <literal>
                data directory</literal> (LTDATA), such as scripts, configuration files, logs, or SQL dump files.
            </para>
        </listitem>

        <listitem>
            <para>
                Backup Catalog: get list of backups and corresponding meta information in plain text or JSON formats
            </para>
        </listitem>

        <listitem>
            <para>
                Archive catalog: getting the list of all WAL timelines and the corresponding meta information in plain text or JSON formats
            </para>
        </listitem>

        <listitem>
            <para>
                Partial Restore: restore only the specified databases or exclude the specified databases from restore.
            </para>
        </listitem>
    </itemizedlist>

    <para>
        To manage backup data, <literal>lt_probackup</literal> creates a backup catalog. This directory stores
        all backup files with additional meta information, as well as WAL archives required for point-in-time
        recovery. You can store backups for different instances in separate subdirectories of a single backup catalog.
    </para>

    <para>
        Using <literal>lt_probackup</literal>, you can take full or incremental backups:
    </para>

    <itemizedlist>
        <listitem>
            <para>
                <literal>Full</literal> backups contain all the data files required to restore the database cluster from scratch.
            </para>
        </listitem>

        <listitem>
            <para>
                <literal>Incremental</literal> backups only store the data that has changed since the previous backup. It allows
                to decrease the backup size and speed up backup operations. <literal>lt_probackup</literal> supports the
                following modes of incremental backups:
            </para>

            <itemizedlist>
                <listitem>
                    <para>
                        <literal>PAGE</literal> backup. In this mode, <literal>lt_probackup</literal> scans all
                        WAL files in the archive from the moment the previous full or incremental backup was
                        taken. Newly created backups contain only the pages that were mentioned in WAL records.
                        This requires all the WAL files since the previous backup to be present in the WAL
                        archive. If the size of these files is comparable to the total size of the database
                        cluster files, speedup is smaller, but the backup still takes less space.
                    </para>
                </listitem>

                <listitem>
                    <para>
                        <literal>DELTA</literal> backup. In this mode, <literal>lt_probackup</literal> read all
                        data files in LTDATA directory and only those pages, that where changed since previous
                        backup, are copied. Continuous archiving is not necessary for it to operate. Also this
                        mode could impose read-only I/O pressure equal to <literal>Full</literal> backup.
                    </para>
                </listitem>

                <listitem>
                    <para>
                        <literal>PTRACK</literal> backup. In this mode, LightDB tracks page changes on the fly.
                        Continuous archiving is not necessary for it to operate. Each time a relation page is
                        updated, this page is marked in a special <literal>PTRACK</literal> bitmap for this
                        relation. As one page requires just one bit in the <literal>PTRACK</literal> fork, such
                        bitmaps are quite small. Tracking implies some minor overhead on the database server
                        operation, but speeds up incremental backups significantly.
                    </para>
                </listitem>
            </itemizedlist>
        </listitem>
    </itemizedlist>

    <para>
        Regardless of the chosen backup type, all backups taken with <literal>lt_probackup</literal>
        support the following strategies of WAL delivery:
    </para>

    <itemizedlist>
        <listitem>
            <para>
                <literal>Autonomous backups</literal> streams via replication protocol all the WAL files required
                to restore the cluster to a consistent state at the time the backup was taken. Even if continuous
                archiving is not set up, the required WAL segments are included into the backup.
            </para>
        </listitem>

        <listitem>
            <para>
                <literal>Archive</literal> backups rely on continuous archiving.
            </para>
        </listitem>
    </itemizedlist>

    <sect2>
        <title>Limitations</title>

        <para>
            <literal>lt_probackup</literal> currently has the following limitations:
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    The server from which the backup was taken and the restored server must be compatible by
                    the <literal>block_size</literal>(Reports the size of a disk block. It is determined by the
                    value of <literal>BLCKSZ</literal> when building the server. The default value is 8192 bytes.) and
                    <literal>wal_block_size</literal>(Reports the size of a WAL disk block. It is determined by
                    the value of <literal>XLOG_BLCKSZ</literal> when building the server. The default value
                    is 8192 bytes.) parameters and have the same major release number.
                </para>
            </listitem>

            <listitem>
                <para>
                    When running remote operations via ssh, remote and local lt_probackup versions must be the same.
                </para>
            </listitem>
        </itemizedlist>
    </sect2>
</sect1>